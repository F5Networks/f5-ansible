---

- import_tasks: setup.yaml

- name: Create DNS Monitor
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    query_name: "{{ query_name1 }}"
    state: present
  register: result

- name: Assert Create DNS Monitor
  assert:
    that:
      - result is changed
      - result.query_name == query_name1

- name: Create DNS Monitor - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    query_name: "{{ query_name1 }}"
    state: present
  register: result

- name: Assert Create DNS Monitor - Idempotent check
  assert:
    that:
      - result is not changed

- name: Change IP
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    ip: 10.10.10.10
    port: 80
  register: result

- name: Assert Change IP
  assert:
    that:
      - result is changed
      - result.ip == '10.10.10.10'
      - result.port == 80

- name: Change IP - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    ip: 10.10.10.10
    port: 80
  register: result

- name: Assert Change IP - Idempotent check
  assert:
    that:
      - result is not changed

- name: Change port
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    port: 8000
  register: result

- name: Assert Change port
  assert:
    that:
      - result is changed
      - result.port == 8000

- name: Change port - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    port: 8000
  register: result

- name: Assert Change port - Idempotent check
  assert:
    that:
      - result is not changed

- name: Change interval, less than timeout
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    interval: 2
  register: result

- name: Assert Change interval, less than timeout
  assert:
    that:
      - result is changed
      - result.interval == 2

- name: Change interval, less than timeout - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    interval: 2
  register: result

- name: Assert Change interval, less than timeout - Idempotent check
  assert:
    that:
      - result is not changed

- name: Change interval, greater than timeout, expect failure
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    interval: 200
  register: result
  ignore_errors: true

- name: Assert Change interval, greater than timeout, expect failure
  assert:
    that:
      - result is not changed

- name: Change timeout
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    timeout: 80
  register: result

- name: Assert Change timeout
  assert:
    that:
      - result is changed
      - result.timeout == 80

- name: Change timeout - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    timeout: 80
  register: result

- name: Assert Change timeout - Idempotent check
  assert:
    that:
      - result is not changed

- name: Change time until up
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    time_until_up: 80
  register: result

- name: Assert Change time until up
  assert:
    that:
      - result is changed
      - result.time_until_up == 80

- name: Change time until up - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    time_until_up: 80
  register: result

- name: Assert Change time until up - Idempotent check
  assert:
    that:
      - result is not changed

- name: Change up interval
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    up_interval: 80
  register: result

- name: Assert Change up interval
  assert:
    that:
      - result is changed
      - result.up_interval == 80

- name: Change up interval - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    up_interval: 80
  register: result

- name: Assert Change up interval - Idempotent check
  assert:
    that:
      - result is not changed

- name: Disable up interval
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    up_interval: 0
  register: result

- name: Assert Disable up interval
  assert:
    that:
      - result is changed
      - result.up_interval == 0

- name: Disable up interval - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    up_interval: 0
  register: result

- name: Assert Disable up interval - Idempotent check
  assert:
    that:
      - result is not changed

- name: Change manual resume - yes
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    manual_resume: yes
  register: result

- name: Assert Change manual resume - yes
  assert:
    that:
      - result is changed
      - result.manual_resume == 'yes'

- name: Change manual resume - yes - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    manual_resume: yes
  register: result

- name: Assert Change manual resume - yes - Idempotent check
  assert:
    that:
      - result is not changed

- name: Change manual resume - no
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    manual_resume: no
  register: result

- name: Assert Change manual resume - no
  assert:
    that:
      - result is changed
      - result.manual_resume == 'no'

- name: Change manual resume - no - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    manual_resume: no
  register: result

- name: Assert Change manual resume - no - Idempotent check
  assert:
    that:
      - result is not changed

- name: Change reverse - yes, no receive string
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    reverse: yes
  register: result
  failed_when: result is success

- name: Assert Change reverse - yes, no receive string
  assert:
    that:
      - result is not changed
      - result is success

- name: Change receive
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    receive: 2.3.2.3
  register: result

- name: Assert Change receive
  assert:
    that:
      - result is changed
      - result.receive == '2.3.2.3'

- name: Change receive - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    receive: 2.3.2.3
  register: result

- name: Assert Change receive - Idempotent check
  assert:
    that:
      - result is not changed

- name: Change reverse - yes, existing time_until_up
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    reverse: yes
  register: result
  failed_when: result is success

- name: Assert Change reverse - yes, existing time_until_up
  assert:
    that:
      - result is not changed
      - result is success

- name: Zero out time_until_up
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    time_until_up: 0
  register: result

- name: Assert Zero out time_until_up
  assert:
    that:
      - result is changed

- name: Change reverse - yes
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    reverse: yes
  register: result

- name: Assert Change reverse - yes
  assert:
    that:
      - result is changed
      - result.reverse == 'yes'

- name: Change reverse - yes - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    reverse: yes
  register: result

- name: Assert Change reverse - yes - Idempotent check
  assert:
    that:
      - result is not changed

- name: Change reverse - no
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    reverse: no
  register: result

- name: Assert Change reverse - no
  assert:
    that:
      - result is changed
      - result.reverse == 'no'

- name: Change reverse - no - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    reverse: no
  register: result

- name: Assert Change reverse - no - Idempotent check
  assert:
    that:
      - result is not changed

- name: Change transparent - yes
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    transparent: yes
  register: result

- name: Assert Change transparent - yes
  assert:
    that:
      - result is changed
      - result.transparent == 'yes'

- name: Change transparent - yes - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    transparent: yes
  register: result

- name: Assert Change transparent - yes - Idempotent check
  assert:
    that:
      - result is not changed

- name: Change transparent - no
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    transparent: no
  register: result

- name: Assert Change transparent - no
  assert:
    that:
      - result is changed
      - result.transparent == 'no'

- name: Change transparent - no - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    transparent: no
  register: result

- name: Assert Change transparent - no - Idempotent check
  assert:
    that:
      - result is not changed

- name: Change query name
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    query_name: "{{ query_name2 }}"
  register: result

- name: Assert Change query name
  assert:
    that:
      - result is changed
      - result.query_name == query_name2

- name: Change query name - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    query_name: "{{ query_name2 }}"
  register: result

- name: Assert Change query name - Idempotent check
  assert:
    that:
      - result is not changed

- name: Change query type - incorrect reverse
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    query_type: aaaa
  register: result
  failed_when: result is success

- name: Assert Change query type - incorrect reverse
  assert:
    that:
      - result is not changed
      - result is success

- name: Change receive to IPv6
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    receive: "::1"
  register: result
  failed_when: result is success

- name: Assert Change receive to IPv6
  assert:
    that:
      - result is not changed
      - result is success

- name: Change receive to IPv6 and query type to aaaa
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    receive: "::1"
    query_type: aaaa
  register: result

- name: Assert Change receive to IPv6 and query type to aaaa
  assert:
    that:
      - result is changed
      - result is success

- name: Change receive to IPv6 and query type to aaaa - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    receive: "::1"
    query_type: aaaa
  register: result

- name: Assert Change receive to IPv6 and query type to aaaa - Idempotent check
  assert:
    that:
      - result is not changed
      - result is success

- name: Change accept rcode - anything
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    accept_rcode: anything
  register: result
  failed_when: result is success

- name: Assert Change accept rcode - anything
  assert:
    that:
      - result is not changed
      - result is success

- name: Change accept rcode - anything with zero'd receive
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    accept_rcode: anything
    receive: ''
  register: result

- name: Assert Change accept rcode - anything with zero'd receive
  assert:
    that:
      - result is changed
      - result is success

- name: Change accept rcode - anything with zero'd receive - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    accept_rcode: anything
  register: result

- name: Assert Change accept rcode - anything with zero'd receive - Idempotent check
  assert:
    that:
      - result is not changed
      - result is success

- name: Change adaptive - yes
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    adaptive: yes
  register: result

- name: Assert Change adaptive - yes
  assert:
    that:
      - result is changed
      - result is success

- name: Change adaptive - yes - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    adaptive: yes
  register: result

- name: Assert Change adaptive - yes - Idempotent check
  assert:
    that:
      - result is not changed
      - result is success

- name: Change adaptive - no
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    adaptive: no
  register: result

- name: Assert Change adaptive - no
  assert:
    that:
      - result is changed
      - result is success

- name: Change adaptive - no - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    adaptive: no
  register: result

- name: Assert Change adaptive - no - Idempotent check
  assert:
    that:
      - result is not changed
      - result is success

- name: Change allowed divergence - type absolute
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    allowed_divergence_type: absolute
  register: result

- name: Assert Change allowed divergence - type absolute
  assert:
    that:
      - result is changed
      - result is success

- name: Change allowed divergence - type absolute - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    allowed_divergence_type: absolute
  register: result

- name: Assert Change allowed divergence - type absolute - Idempotent check
  assert:
    that:
      - result is not changed
      - result is success

- name: Change allowed divergence - type relative
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    allowed_divergence_type: relative
  register: result

- name: Assert Change allowed divergence - type relative
  assert:
    that:
      - result is changed
      - result is success

- name: Change allowed divergence - type relative - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    allowed_divergence_type: relative
  register: result

- name: Assert Change allowed divergence - type relative - Idempotent check
  assert:
    that:
      - result is not changed
      - result is success

- name: Change allowed divergence - value
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    allowed_divergence_value: 100
  register: result

- name: Assert Change allowed divergence - value
  assert:
    that:
      - result is changed
      - result is success

- name: Change allowed divergence - value - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    allowed_divergence_value: 100
  register: result

- name: Assert Change allowed divergence - value - Idempotent check
  assert:
    that:
      - result is not changed
      - result is success

- name: Change adaptive limit
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    adaptive_limit: 100
  register: result

- name: Assert Change adaptive limit
  assert:
    that:
      - result is changed
      - result is success

- name: Change adaptive limit - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    adaptive_limit: 100
  register: result

- name: Assert Change adaptive limit - Idempotent check
  assert:
    that:
      - result is not changed
      - result is success

- name: Change sampling timespan
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    sampling_timespan: 100
  register: result

- name: Assert Change sampling timespan
  assert:
    that:
      - result is changed
      - result is success

- name: Change sampling timespan - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    sampling_timespan: 100
  register: result

- name: Assert Change sampling timespan - Idempotent check
  assert:
    that:
      - result is not changed
      - result is success

- name: Change answer section - any type
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    answer_section_contains: any-type
  register: result

- name: Assert Change answer section - any type
  assert:
    that:
      - result is changed
      - result is success

- name: Change answer section - any type - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    answer_section_contains: any-type
  register: result

- name: Assert Change answer section - any type - Idempotent check
  assert:
    that:
      - result is not changed
      - result is success

- name: Change answer section - anything
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    answer_section_contains: anything
  register: result

- name: Assert Change answer section - anything
  assert:
    that:
      - result is changed
      - result is success

- name: Change answer section - anything - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    answer_section_contains: anything
  register: result

- name: Assert Change answer section - anything - Idempotent check
  assert:
    that:
      - result is not changed
      - result is success

- name: Change answer section - query type
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    answer_section_contains: query-type
  register: result

- name: Assert Change answer section - query type
  assert:
    that:
      - result is changed
      - result is success

- name: Change answer section - query type - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    answer_section_contains: query-type
  register: result

- name: Assert Change answer section - query type - Idempotent check
  assert:
    that:
      - result is not changed
      - result is success

- name: Remove DNS Monitor
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    state: absent
  register: result

- name: Assert Remove DNS Monitor
  assert:
    that:
      - result is changed

- name: Remove DNS Monitor - Idempotent check
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    state: absent
  register: result

- name: Assert Remove DNS Monitor - Idempotent check
  assert:
    that:
      - result is not changed

- name: Create accept rcode anything with receive
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    query_name: "foo"
    accept_rcode: anything
    receive: 1.3.2.4
  register: result
  failed_when: result is success

- name: Assert Create accept rcode anything with receive
  assert:
    that:
      - result is success
      - result is not changed

- name: Create receive with wrong query type - aaaa
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    query_name: "foo"
    query_type: aaaa
    receive: 1.3.2.4
  register: result
  failed_when: result is success

- name: Assert Create receive with wrong query type - aaaa
  assert:
    that:
      - result is success
      - result is not changed

- name: Create receive with wrong query type - a
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    query_name: "foo"
    query_type: a
    receive: "::1"
  register: result
  failed_when: result is success

- name: Assert Create receive with wrong query type - a
  assert:
    that:
      - result is success
      - result is not changed

- name: Create no query name
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
  register: result
  failed_when: result is success

- name: Assert Create no query name
  assert:
    that:
      - result is success
      - result is not changed

- name: Remove monitor
  bigip_monitor_dns:
    name: "{{ monitor_name }}"
    state: absent

- import_tasks: issue-00833.yaml
  tags: issue-00833

- import_tasks: teardown.yaml
