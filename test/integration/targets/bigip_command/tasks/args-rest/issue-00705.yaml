---

- name: Issue 00693 - Include issue variables - args-rest
  include_vars:
    file: issue-00705.yaml

- name: Issue 00705 - Create pool - args-rest
  bigip_pool:
    name: "{{ pool_name }}"
    state: present
    user: "{{ bigip_username }}"
    server: "{{ ansible_host }}"
    server_port: "{{ bigip_port }}"
    password: "{{ bigip_password }}"
    validate_certs: "{{ validate_certs }}"
  register: result

- name: Issue 00705 - Add pool member - args-rest
  bigip_pool_member:
    connection_limit: "{{ connection_limit }}"
    description: "{{ node_description }}"
    host: "{{ node_host }}"
    pool: "{{ pool_name }}"
    port: "{{ node_port }}"
    rate_limit: "{{ rate_limit }}"
    ratio: "{{ ratio }}"
    state: present
    user: "{{ bigip_username }}"
    server: "{{ ansible_host }}"
    server_port: "{{ bigip_port }}"
    password: "{{ bigip_password }}"
    validate_certs: "{{ validate_certs }}"
  register: result

- name: Issue 00705 - Run multiple commands - args-rest
  bigip_command:
    user: "{{ bigip_username }}"
    server: "{{ ansible_host }}"
    server_port: "{{ bigip_port }}"
    password: "{{ bigip_password }}"
    validate_certs: "{{ validate_certs }}"
    commands:
      - show sys software | grep 'yes'
      - list sys software | grep 'volume'
      - show ltm pool all detail | grep "Pool Member" -A 4 | grep -c available
      - show ltm pool all detail | grep "Pool Member" -A 4 | grep -c "disabled\\|offline\\|unknown"
  register: result

- name: Issue 00705 - Assert Run multiple commands - args-rest
  assert:
    that:
      - result.stdout|count == 4
      - result.stdout_lines|count == 4
      - result.stdout_lines[0]|count == 1
      - result.stdout_lines[1]|count == 1
      - result.stdout_lines[2]|count == 1
      - result.stdout_lines[3]|count == 1
      - "'show sys software' not in result.stdout[0]"
      - "'list sys software' not in result.stdout[1]"
      - "'show ltm pool all detail' not in result.stdout[2]"
      - "'show ltm pool all detail' not in result.stdout[3]"
