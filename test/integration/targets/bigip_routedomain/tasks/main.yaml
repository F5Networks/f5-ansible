---

- import_tasks: setup.yaml

- name: Create route domain
  bigip_routedomain:
    id: "{{ new_routedomain }}"
  register: result

- name: Assert Create route domain
  assert:
    that:
      - result is changed

- name: Create route domain - Idempotent check
  bigip_routedomain:
    id: "{{ new_routedomain }}"
  register: result

- name: Assert Create route domain - Idempotent check
  assert:
    that:
      - result is not changed

- name: Set a description
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    description: "{{ valid_description }}"
  register: result

- name: Assert Set a description
  assert:
    that:
      - result is changed

- name: Create Set a description - Idempotent check
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    description: "{{ valid_description }}"
  register: result

- name: Assert Set a description - Idempotent check
  assert:
    that:
      - result is not changed

- name: Disable strict isolation
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    strict: no
  register: result

- name: Assert Disable strict isolation
  assert:
    that:
      - result is changed

- name: Disable strict isolation - Idempotent check
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    strict: no
  register: result

- name: Assert Disable strict isolation - Idempotent check
  assert:
    that:
      - result is not changed

- name: Enable strict isolation
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    strict: yes
  register: result

- name: Assert Enable strict isolation
  assert:
    that:
      - result is changed

- name: Enable strict isolation - Idempotent check
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    strict: yes
  register: result

- name: Assert Enable strict isolation - Idempotent check
  assert:
    that:
      - result is not changed

- name: Set parent route domain
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    parent: "{{ default_parent }}"
  register: result

- name: Assert Set parent route domain
  assert:
    that:
      - result is changed

- name: Set parent route domain - Idempotent check
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    parent: "{{ default_parent }}"
  register: result

- name: Assert Set parent route domain - Idempotent check
  assert:
    that:
      - result is not changed

- name: Set vlans
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    vlans: "{{ valid_vlans }}"
  register: result

- name: Assert Set vlans
  assert:
    that:
      - result is changed

- name: Set vlans - Idempotent check
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    vlans: "{{ valid_vlans }}"
  register: result

- name: Assert Set vlans - Idempotent check
  assert:
    that:
      - result is not changed

- name: Set a single routing protocol, valid
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    routing_protocol: "{{ valid_routing_protocol }}"
  register: result

- name: Assert Set a single routing protocol, valid
  assert:
    that:
      - result is changed

- name: Set a single routing protocol, valid - Idempotent check
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    routing_protocol: "{{ valid_routing_protocol }}"
  register: result

- name: Assert Set a single routing protocol, valid - Idempotent check
  assert:
    that:
      - result is not changed

- name: Set a single routing protocol, invalid
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    routing_protocol: "{{ invalid_routing_protocol }}"
  register: result
  ignore_errors: true

- name: Assert Set a single routing protocol, invalid
  assert:
    that:
      - result is not changed

- name: Set a single routing protocol, invalid - Idempotent check
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    routing_protocol: "{{ invalid_routing_protocol }}"
  register: result
  ignore_errors: true

- name: Assert Set a single routing protocol, invalid - Idempotent check
  assert:
    that:
      - result is not changed

- name: Set a list of routing protocols, valid
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    routing_protocol: "{{ valid_routing_protocols }}"
  register: result

- name: Assert Set a list of routing protocols, valid
  assert:
    that:
      - result is changed

- name: Set a list of routing protocols, valid - Idempotent check
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    routing_protocol: "{{ valid_routing_protocols }}"
  register: result

- name: Assert Set a list of routing protocols, valid - Idempotent check
  assert:
    that:
      - result is not changed

- name: Set a list of routing protocols, invalid
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    routing_protocol: "{{ invalid_routing_protocols }}"
  register: result
  ignore_errors: true

- name: Assert Set a list of routing protocols, invalid
  assert:
    that:
      - result is not changed

- name: Set a list of routing protocols, invalid - Idempotent check
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    routing_protocol: "{{ invalid_routing_protocols }}"
  register: result
  ignore_errors: true

- name: Assert Set a list of routing protocols, invalid - Idempotent check
  assert:
    that:
      - result is not changed

- name: Set a routing protocols, none
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    routing_protocol: ""
  register: result
  ignore_errors: true

- name: Assert Set routing protocols, none
  assert:
    that:
      - result is changed

- name: Set routing protocols, none - Idempotent check
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    routing_protocol: ""
  register: result
  ignore_errors: true

- name: Assert Set routing protocols, none - Idempotent check
  assert:
    that:
      - result is not changed

- name: Set connection limit, valid
  bigip_routedomain:
    connection_limit: "{{ valid_connection_limit }}"
    id: "{{ new_routedomain }}"
  register: result

- name: Assert Set connection limit, valid
  assert:
    that:
      - result is changed

- name: Set connection limit, valid - Idempotent check
  bigip_routedomain:
    connection_limit: "{{ valid_connection_limit }}"
    id: "{{ new_routedomain }}"
  register: result

- name: Assert Set connection limit, valid - Idempotent check
  assert:
    that:
      - result is not changed

- name: Set connection limit, invalid
  bigip_routedomain:
    connection_limit: "{{ invalid_connection_limit }}"
    id: "{{ new_routedomain }}"
  register: result
  ignore_errors: true

- name: Assert Set connection limit, invalid
  assert:
    that:
      - result is not changed

- name: Set connection limit, invalid - Idempotent check
  bigip_routedomain:
    connection_limit: "{{ invalid_connection_limit }}"
    id: "{{ new_routedomain }}"
  register: result
  ignore_errors: true

- name: Assert Set connection limit, invalid - Idempotent check
  assert:
    that:
      - result is not changed

- name: Set flow eviction policy, valid
  bigip_routedomain:
    flow_eviction_policy: "{{ valid_flow_eviction_policy }}"
    id: "{{ new_routedomain }}"
  register: result

- name: Assert Set flow eviction policy, valid
  assert:
    that:
      - result is changed

- name: Set flow eviction policy, valid - Idempotent check
  bigip_routedomain:
    flow_eviction_policy: "{{ valid_flow_eviction_policy }}"
    id: "{{ new_routedomain }}"
  register: result
  ignore_errors: true

- name: Assert Set flow eviction policy, valid - Idempotent check
  assert:
    that:
      - result is not changed

- name: Set flow eviction policy, invalid
  bigip_routedomain:
    flow_eviction_policy: "{{ item }}"
    id: "{{ new_routedomain }}"
  register: result
  ignore_errors: true
  loop: "{{ invalid_flow_eviction_policy }}"

- name: Assert Set flow eviction policy, invalid
  assert:
    that:
      - result is not changed

- name: Set flow eviction policy, invalid - Idempotent check
  bigip_routedomain:
    flow_eviction_policy: "{{ item }}"
    id: "{{ new_routedomain }}"
  register: result
  ignore_errors: true
  loop: "{{ invalid_flow_eviction_policy }}"

- name: Assert Set flow eviction policy, invalid - Idempotent check
  assert:
    that:
      - result is not changed

- name: Set bandwidth control policy, valid
  bigip_routedomain:
    bwc_policy: "{{ valid_bwc_policy }}"
    id: "{{ new_routedomain }}"
  register: result

- name: Assert Set bandwidth control policy, valid
  assert:
    that:
      - result is changed

- name: Set bandwidth control policy, valid - Idempotent check
  bigip_routedomain:
    bwc_policy: "{{ valid_bwc_policy }}"
    id: "{{ new_routedomain }}"
  register: result

- name: Assert Set bandwidth control policy, valid - Idempotent check
  assert:
    that:
      - result is not changed

- name: Set bandwidth control policy, invalid
  bigip_routedomain:
    bwc_policy: "{{ item }}"
    id: "{{ new_routedomain }}"
  register: result
  ignore_errors: true
  loop: "{{ invalid_bwc_policy }}"

- name: Assert Set bandwith control policy, invalid
  assert:
    that:
      - result is not changed

- name: Set bandwidth control policy, invalid - Idempotent check
  bigip_routedomain:
    bwc_policy: "{{ item }}"
    id: "{{ new_routedomain }}"
  register: result
  ignore_errors: true
  loop: "{{ invalid_bwc_policy }}"

- name: Assert Set bandwidth control policy, invalid - Idempotent check
  assert:
    that:
      - result is not changed

- name: Set service policy, valid
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    service_policy: "{{ valid_service_policy }}"
  register: result
  when: system_info.product_information.product_version >= "12.0.0"

- name: Assert Set service policy, valid
  assert:
    that:
      - result is changed
  when: system_info.product_information.product_version >= "12.0.0"

- name: Set service policy, valid - Idempotent check
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    service_policy: "{{ valid_service_policy }}"
  register: result
  when: system_info.product_information.product_version >= "12.0.0"

- name: Assert Set service policy, valid - Idempotent check
  assert:
    that:
      - result is not changed
  when: system_info.product_information.product_version >= "12.0.0"

- name: Set service policy, invalid
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    service_policy: "{{ item }}"
  register: result
  ignore_errors: true
  loop: "{{ invalid_service_policy }}"
  when: system_info.product_information.product_version >= "12.0.0"

- name: Assert Set service policy, invalid
  assert:
    that:
      - result is not changed
  when: system_info.product_information.product_version >= "12.0.0"

- name: Set service policy, invalid - Idempotent check
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    service_policy: "{{ item }}"
  register: result
  ignore_errors: true
  loop: "{{ invalid_service_policy }}"
  when: system_info.product_information.product_version >= "12.0.0"

- name: Assert Set service policy, invalid - Idempotent check
  assert:
    that:
      - result is not changed
  when: system_info.product_information.product_version >= "12.0.0"

- name: Delete a route domain
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    state: absent
  register: result

- name: Assert Delete a route domain
  assert:
    that:
      - result is changed

- name: Delete a route domain - Idempotent check
  bigip_routedomain:
    id: "{{ new_routedomain }}"
    state: absent
  register: result

- name: Assert Delete a route domain - Idempotent check
  assert:
    that:
      - result is not changed

- name: Delete an unknown route domain
  bigip_routedomain:
    id: "{{ unknown_route_domain }}"
    state: absent
  register: result

- name: Assert Delete an unknown route domain
  assert:
    that:
      - result is not changed

- name: Delete a route domain, invalid
  bigip_routedomain:
    id: "{{ item }}"
    state: absent
  register: result
  ignore_errors: true
  loop: "{{ invalid_route_domains }}"

- name: Assert Delete a route domain, invalid
  assert:
    that:
      - result is not changed

- name: Create route domain - all params
  bigip_routedomain:
    id: "{{ new_routedomain2 }}"
    parent: "{{ default_parent }}"
  register: result

- name: Assert Create route domain - all params
  assert:
    that:
      - result is changed

- name: Delete a route domain - all params
  bigip_routedomain:
    id: "{{ new_routedomain2 }}"
    state: absent
  register: result

- name: Assert Delete a route domain - all params
  assert:
    that:
      - result is changed

- import_tasks: teardown.yaml

- import_tasks: issue-00051.yaml
  tags: issue-00051

- import_tasks: issue-00379.yaml
  tags: issue-00379

#- import_tasks: issue-00693.yaml
#  tags: issue-00693

- import_tasks: issue-00775.yaml
  tags: issue-00775
