---

# TODO (Raise error when trying to delete a node that is still a member of a pool)
- name: Create pool
  bigip_pool:
    name: "{{ pool_name }}"
    state: present
  register: result

- name: Add pool member
  bigip_pool_member:
    connection_limit: "{{ connection_limit }}"
    description: "{{ node_description }}"
    host: "{{ node_host }}"
    pool: "{{ pool_name }}"
    port: "{{ node_port }}"
    rate_limit: "{{ rate_limit }}"
    ratio: "{{ ratio }}"
    state: present
  register: result

- name: Assert Add pool member
  assert:
    that:
      - result is changed

- name: Add pool member - Idempotent check
  bigip_pool_member:
    connection_limit: "{{ connection_limit }}"
    description: "{{ node_description }}"
    host: "{{ node_host }}"
    pool: "{{ pool_name }}"
    port: "{{ node_port }}"
    rate_limit: "{{ rate_limit }}"
    ratio: "{{ ratio }}"
    state: present
  register: result

- name: Assert Add pool member - Idempotent check
  assert:
    that:
      - result is not changed

- name: Modify pool member ratio and description
  bigip_pool_member:
    description: "{{ new_description }}"
    host: "{{ node_host }}"
    pool: "{{ pool_name }}"
    port: "{{ node_port }}"
    ratio: "{{ new_ratio }}"
    state: present
  register: result

- name: Assert Modify pool member ratio and description
  assert:
    that:
      - result is changed

- name: Modify pool member ratio and description - Idempotent check
  bigip_pool_member:
    description: "{{ new_description }}"
    host: "{{ node_host }}"
    pool: "{{ pool_name }}"
    port: "{{ node_port }}"
    ratio: "{{ new_ratio }}"
    state: present
  register: result

- name: Assert Modify pool member ratio and description - Idempotent check
  assert:
    that:
      - result is not changed

- name: Disable pool member
  bigip_pool_member:
    host: "{{ node_host }}"
    pool: "{{ pool_name }}"
    port: "{{ node_port }}"
    state: disabled
  register: result

- name: Assert Disable pool member
  assert:
    that:
      - result is changed

- name: Disable pool member - Idempotent check
  bigip_pool_member:
    host: "{{ node_host }}"
    pool: "{{ pool_name }}"
    port: "{{ node_port }}"
    state: disabled
  register: result

- name: Force pool member offline
  bigip_pool_member:
    host: "{{ node_host }}"
    pool: "{{ pool_name }}"
    port: "{{ node_port }}"
    state: forced_offline
  register: result

- name: Assert Force pool member offline
  assert:
    that:
      - result is changed

- name: Force pool member offline - Idempotent check
  bigip_pool_member:
    host: "{{ node_host }}"
    pool: "{{ pool_name }}"
    port: "{{ node_port }}"
    state: forced_offline
  register: result

- name: Assert Force pool member offline - Idempotent check
  assert:
    that:
      - result is not changed

- name: Remove pool member from pool, preserve node
  bigip_pool_member:
    host: "{{ node_host }}"
    pool: "{{ pool_name }}"
    port: "{{ node_port }}"
    preserve_node: yes
    state: absent
  register: result

- name: Assert Remove pool member from pool, preserve node
  assert:
    that:
      - result is changed

- name: Remove pool member from pool, preserve node - Idempotent check
  bigip_pool_member:
    host: "{{ node_host }}"
    pool: "{{ pool_name }}"
    port: "{{ node_port }}"
    preserve_node: yes
    state: absent
  register: result

- name: Assert Remove pool member from pool, preserve node - Idempotent check
  assert:
    that:
      - result is not changed

- name: Add pool member
  bigip_pool_member:
    connection_limit: "{{ connection_limit }}"
    description: "{{ node_description }}"
    host: "{{ node_host }}"
    pool: "{{ pool_name }}"
    port: "{{ node_port }}"
    rate_limit: "{{ rate_limit }}"
    ratio: "{{ ratio }}"
    state: present
  register: result

- name: Remove non-existent pool member from pool, do not preserve node
  bigip_pool_member:
    host: "{{ node_host }}"
    pool: "{{ pool_name }}"
    port: "{{ node_port }}"
    preserve_node: no
    state: absent
  register: result

- name: Assert Remove non-existent pool member from pool, do not preserve node
  assert:
    that:
      - result is changed

- name: Remove non-existent pool member from pool, do not preserve node - Idempotent check
  bigip_pool_member:
    host: "{{ node_host }}"
    pool: "{{ pool_name }}"
    port: "{{ node_port }}"
    preserve_node: no
    state: absent
  register: result

- name: Assert Remove non-existent pool member from pool, do not preserve node - Idempotent check
  assert:
    that:
      - result is not changed

- name: Add pool member by address
  bigip_pool_member:
    address: 2.2.2.2
    pool: "{{ pool_name }}"
    port: "{{ node_port }}"
    state: present
  register: result

- name: Assert Add pool member by address
  assert:
    that:
      - result is changed

- name: Add pool member by address - Idempotent check
  bigip_pool_member:
    address: 2.2.2.2
    pool: "{{ pool_name }}"
    port: "{{ node_port }}"
    state: present
  register: result

- name: Add pool member by address - Idempotent check
  assert:
    that:
      - result is not changed

- name: Add pool member by FQDN
  bigip_pool_member:
    fqdn: foo.baz.bar
    pool: "{{ pool_name }}"
    port: "{{ node_port }}"
    state: present
  register: result

- name: Assert Add pool member by FQDN
  assert:
    that:
      - result is changed

- name: Add pool member by FQDN - Idempotent check
  bigip_pool_member:
    fqdn: foo.baz.bar
    pool: "{{ pool_name }}"
    port: "{{ node_port }}"
    state: present
  register: result

- name: Add pool member by FQDN - Idempotent check
  assert:
    that:
      - result is not changed

- name: Add pool member by FQDN, setting the node name
  bigip_pool_member:
    name: foo1-node1
    fqdn: foo1.baz.bar
    pool: "{{ pool_name }}"
    port: "{{ node_port }}"
    state: present
  register: result

- name: Assert Add pool member by FQDN, setting the node name
  assert:
    that:
      - result is changed

- name: Add pool member by FQDN, setting the node name - Idempotent check
  bigip_pool_member:
    name: foo1-node1
    fqdn: foo1.baz.bar
    pool: "{{ pool_name }}"
    port: "{{ node_port }}"
    state: present
  register: result

- name: Add pool member by FQDN, setting the node name - Idempotent check
  assert:
    that:
      - result is not changed

- name: Add pool member by address, setting the node name
  bigip_pool_member:
    name: foo2-node2
    address: 1.2.3.4
    pool: "{{ pool_name }}"
    port: "{{ node_port }}"
    state: present
  register: result

- name: Assert Add pool member by address, setting the node name
  assert:
    that:
      - result is changed

- name: Add pool member by address, setting the node name - Idempotent check
  bigip_pool_member:
    name: foo2-node2
    address: 1.2.3.4
    pool: "{{ pool_name }}"
    port: "{{ node_port }}"
    state: present
  register: result

- name: Add pool member by address, setting the node name - Idempotent check
  assert:
    that:
      - result is not changed

- name: Delete pool
  bigip_pool:
    name: "{{ pool_name }}"
    state: absent
  register: result

- name: Assert delete pool
  assert:
    that:
      - result is changed

- name: Delete nodes
  bigip_node:
    name: "{{ item }}"
    state: absent
  loop:
    - 2.2.2.2
    - foo.baz.bar
    - foo1-node1
    - foo2-node2

- import_tasks: issue-00573.yaml
  tags: issue-00573

- import_tasks: issue-00721.yaml
  tags: issue-00721

- import_tasks: issue-00791.yaml
  tags: issue-00791

- import_tasks: pr-23128.yaml
  tags: pr-23128
