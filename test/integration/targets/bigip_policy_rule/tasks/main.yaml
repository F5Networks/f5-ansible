---

- import_tasks: setup.yaml

- name: Create rule for published policy, no actions, no conditions
  bigip_policy_rule:
    policy: "{{ policy_name1 }}"
    name: rule1
  register: result

- name: Assert Create rule for published policy, no actions, no conditions
  assert:
    that:
      - result is changed

- name: Create rule for published policy, no actions, no conditions - Idempotent check
  bigip_policy_rule:
    policy: "{{ policy_name1 }}"
    name: rule1
  register: result

- name: Assert Create rule for published policy, no actions, no conditions - Idempotent check
  assert:
    that:
      - result is not changed

- name: Remove rule from published policy
  bigip_policy_rule:
    policy: "{{ policy_name1 }}"
    name: rule1
    state: absent
  register: result

- name: Assert Remove rule from published policy
  assert:
    that:
      - result is changed

- name: Remove rule from published policy - Idempotent check
  bigip_policy_rule:
    policy: "{{ policy_name1 }}"
    name: rule1
    state: absent
  register: result

- name: Assert Remove rule from published policy - Idempotent check
  assert:
    that:
      - result is not changed

- name: Create rule for draft policy, no actions, no conditions
  bigip_policy_rule:
    policy: "{{ policy_name2 }}"
    name: rule1
  register: result

- name: Assert Create rule for draft policy, no actions, no conditions
  assert:
    that:
      - result is changed

- name: Create rule for draft policy, no actions, no conditions - Idempotent check
  bigip_policy_rule:
    policy: "{{ policy_name2 }}"
    name: rule1
  register: result

- name: Assert Create rule for draft policy, no actions, no conditions - Idempotent check
  assert:
    that:
      - result is not changed

- name: Remove rule from draft policy
  bigip_policy_rule:
    policy: "{{ policy_name2 }}"
    name: rule1
    state: absent
  register: result

- name: Assert Remove rule from draft policy
  assert:
    that:
      - result is changed

- name: Remove rule from draft policy - Idempotent check
  bigip_policy_rule:
    policy: "{{ policy_name2 }}"
    name: rule1
    state: absent
  register: result

- name: Assert Remove rule from draft policy - Idempotent check
  assert:
    that:
      - result is not changed

- name: Create published rule, actions mutex check - EXPECTED FAILURE
  bigip_policy_rule:
    policy: "{{ policy_name1 }}"
    name: rule1
    actions:
      - type: forward
        pool: foo
        asm_policy: bar
  register: result
  ignore_errors: true

- name: Assert Create published rule, actions mutex check - EXPECTED FAILURE
  assert:
    that:
      - result is not changed
      - result|failed
      - "'parameters are mutually exclusive' in result.msg"

- name: Create published rule with actions
  bigip_policy_rule:
    policy: "{{ policy_name1 }}"
    name: rule1
    actions:
      - type: forward
        pool: foo-pool
  register: result

- name: Assert Create published rule with actions
  assert:
    that:
      - result is changed

- name: Create published rule with actions - Idempotent check
  bigip_policy_rule:
    policy: "{{ policy_name1 }}"
    name: rule1
    actions:
      - type: forward
        pool: foo-pool
  register: result

- name: Assert Create published rule with actions - Idempotent check
  assert:
    that:
      - result is not changed

- name: Add actions to a rule
  bigip_policy_rule:
    policy: "{{ policy_name1 }}"
    name: rule1
    actions:
      - type: forward
        pool: foo-pool
      - type: forward
        pool: foo-pool2
  register: result

- name: Assert Add actions to a rule
  assert:
    that:
      - result is changed

- name: Add actions to a rule - Idempotent check
  bigip_policy_rule:
    policy: "{{ policy_name1 }}"
    name: rule1
    actions:
      - type: forward
        pool: foo-pool
      - type: forward
        pool: foo-pool2
  register: result

- name: Assert Add actions to a rule - Idempotent check
  assert:
    that:
      - result is not changed

- name: Replace a forward action with an ASM action
  bigip_policy_rule:
    policy: "{{ policy_name1 }}"
    name: rule1
    actions:
      - type: forward
        pool: foo-pool
      - type: enable
        asm_policy: foo-policy
  register: result

- name: Assert Replace a forward action with an ASM action
  assert:
    that:
      - result is changed

- name: Replace a forward action with an ASM action - Idempotent check
  bigip_policy_rule:
    policy: "{{ policy_name1 }}"
    name: rule1
    actions:
      - type: forward
        pool: foo-pool
      - type: enable
        asm_policy: foo-policy
  register: result

- name: Assert Replace a forward action with an ASM action - Idempotent check
  assert:
    that:
      - result is not changed

- name: Add a http_uri condition to a rule with an existing ASM enablement - EXPECTED FAILURE
  bigip_policy_rule:
    policy: "{{ policy_name1 }}"
    name: rule1
    conditions:
      - type: http_uri
        path_begins_with_any:
          - /blogs
          - /admin
  register: result
  ignore_errors: true

- name: Assert Add a http_uri condition
  assert:
    that:
      - result is not changed
      - result|failed
      - "'condition is required when using' in result.msg"

- name: Blank all conditions and actions
  bigip_policy_rule:
    policy: "{{ policy_name1 }}"
    name: rule1
    actions:
      - type: ignore
    conditions:
      - type: all_traffic
  register: result

- name: Assert Blank all conditions and actions
  assert:
    that:
      - result is changed

- name: Blank all conditions and actions - Idempotent check
  bigip_policy_rule:
    policy: "{{ policy_name1 }}"
    name: rule1
    actions:
      - type: ignore
    conditions:
      - type: all_traffic
  register: result

- name: Assert Blank all conditions and actions - Idempotent check
  assert:
    that:
      - result is not changed

- name: Add a http_uri condition
  bigip_policy_rule:
    policy: "{{ policy_name1 }}"
    name: rule1
    conditions:
      - type: http_uri
        path_begins_with_any:
          - /blogs
          - /admin
  register: result

- name: Assert Add a http_uri condition
  assert:
    that:
      - result is changed

- name: Add a http_uri condition - Idempotent check
  bigip_policy_rule:
    policy: "{{ policy_name1 }}"
    name: rule1
    conditions:
      - type: http_uri
        path_begins_with_any:
          - /blogs
          - /admin
  register: result

- name: Assert Add a http_uri condition - Idempotent check
  assert:
    that:
      - result is not changed

- name: Set forward action to test setting an ignore action
  bigip_policy_rule:
    policy: "{{ policy_name1 }}"
    name: rule1
    actions:
      - type: forward
        pool: foo-pool

- name: Set ignore action
  bigip_policy_rule:
    policy: "{{ policy_name1 }}"
    name: rule1
    actions:
      - type: ignore
  register: result

- name: Assert Set ignore action
  assert:
    that:
      - result is changed

- name: Set ignore action - Idempotent check
  bigip_policy_rule:
    policy: "{{ policy_name1 }}"
    name: rule1
    actions:
      - type: ignore
  register: result

- name: Assert Set ignore action - Idempotent check
  assert:
    that:
      - result is not changed

- name: Set all traffic condition
  bigip_policy_rule:
    policy: "{{ policy_name1 }}"
    name: rule1
    conditions:
      - type: all_traffic
  register: result

- name: Assert Set all traffic condition
  assert:
    that:
      - result is changed

- name: Set all traffic condition - Idempotent check
  bigip_policy_rule:
    policy: "{{ policy_name1 }}"
    name: rule1
    conditions:
      - type: all_traffic
  register: result

- name: Assert Set all traffic condition - Idempotent check
  assert:
    that:
      - result is not changed

- name: Remove rule
  bigip_policy_rule:
    policy: "{{ policy_name1 }}"
    name: rule1
    state: absent
  register: result

- name: Assert Remove rule
  assert:
    that:
      - result is changed

- name: Remove rule - Idempotent check
  bigip_policy_rule:
    policy: "{{ policy_name1 }}"
    name: rule1
    state: absent
  register: result

- name: Assert Remove rule - Idempotent check
  assert:
    that:
      - result is not changed

- import_tasks: teardown.yaml

- import_tasks: issue-00727.yaml
  tags: issue-00727

- import_tasks: issue-00889.yaml
  tags: issue-00889

- import_tasks: issue-00899.yaml
  tags: issue-00899
