---

- import_tasks: setup.yaml

- name: Create an RADIUS device configuration
  bigip_device_auth_radius:
    servers:
      - "ansible_test1"
      - "ansible_test2"
    retries: 3
    service_type: authenticate-only
    accounting_bug: no
    use_for_auth: yes
    state: present
  register: result

- name: Assert Create an RADIUS device configuration
  assert:
    that:
      - result is success
      - result is changed

- name: Create an RADIUS device configuration - Idempotent check
  bigip_device_auth_radius:
    servers:
      - "ansible_test1"
      - "ansible_test2"
    retries: 3
    service_type: authenticate-only
    accounting_bug: no
    use_for_auth: yes
    state: present
  register: result

- name: Assert Create an RADIUS device configuration - Idempotent check
  assert:
    that:
      - result is success
      - result is not changed
      -
- name: Update an RADIUS device configuration
  bigip_device_auth_radius:
    retries: 5
    service_type: administrative
    accounting_bug: yes
    state: present
  register: result

- name: Assert update an RADIUS device configuration
  assert:
    that:
      - result is success
      - result is changed

- name: Update an RADIUS device configuration - Idempotent check
  bigip_device_auth_radius:
    retries: 5
    service_type: administrative
    accounting_bug: yes
    state: present
  register: result

- name: Assert update an RADIUS device configuration - Idempotent check
  assert:
    that:
      - result is success
      - result is not changed

- name: Change Radius configuration, use for auth - no
  bigip_device_auth_radius:
    use_for_auth: no
  register: result

- name: Assert Change Radius configuration, use for auth - no
  assert:
    that:
      - result is success
      - result is changed

- name: Change Radius configuration, use for auth - no - Idempotent check
  bigip_device_auth_radius:
    use_for_auth: no
  register: result

- name: Assert Change Radius configuration, use for auth - no - Idempotent check
  assert:
    that:
      - result is success
      - result is not changed

- name: Change fallback_to_local - yes
  bigip_device_auth_radius:
    fallback_to_local: yes
  register: result
  when: f.system_info.product_version >= "13.0.0"

- name: Assert Change fallback_to_local - yes
  assert:
    that:
      - result is success
      - result is changed
  when: f.system_info.product_version >= "13.0.0"

- name: Change fallback_to_local - yes - Idempotent check
  bigip_device_auth_radius:
    fallback_to_local: yes
  register: result
  when: f.system_info.product_version >= "13.0.0"

- name: Assert Change fallback_to_local - yes - Idempotent check
  assert:
    that:
      - result is success
      - result is not changed
  when: f.system_info.product_version >= "13.0.0"

- name: Change fallback_to_local - no
  bigip_device_auth_radius:
    fallback_to_local: no
  register: result
  when: f.system_info.product_version >= "13.0.0"

- name: Assert Change fallback_to_local - no
  assert:
    that:
      - result is success
      - result is changed
  when: f.system_info.product_version >= "13.0.0"

- name: Change fallback_to_local - no - Idempotent check
  bigip_device_auth_radius:
    fallback_to_local: no
  register: result
  when: f.system_info.product_version >= "13.0.0"

- name: Assert Change fallback_to_local - no - Idempotent check
  assert:
    that:
      - result is success
      - result is not changed
  when: f.system_info.product_version >= "13.0.0"

- name: Disable/Remove RADIUS auth
  bigip_device_auth_radius:
    state: absent
  register: result

- name: Assert disable/remove RADIUS auth
  assert:
    that:
      - result is success
      - result is changed

- name: Disable/Remove RADIUS auth - Idempotent check
  bigip_device_auth_radius:
    state: absent
  register: result

- name: Assert disable/remove RADIUS auth - Idempotent check
  assert:
    that:
      - result is success
      - result is not changed

- import_tasks: teardown.yaml
